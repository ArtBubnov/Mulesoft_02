name: run munit tests before deploy to qa env


#runs whenever a pull request 
#1. has been created
#2. has been reopened
#3. source or target branch has been extended by pushing additional logic if pull request is opened 
on:
  pull_request:
    branches:
      - 'qa**'
    types: [opened, reopened, synchronize]




#list of the jobs that can be runned
#depends on the context of an event
#job:qa --- runs whenever a pull request, where target branch is qa, has been created


jobs:
  qa:
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'qa'
    #in the env section below variables for mulesoft project pom file for the following sections should be defined:
    #1. build --> plugin (org.mule.tools.maven) --> cloudHubDeployment
    #2. build --> plugin (org.mule.tools.maven) --> cloudHubDeployment --> properties 
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME_GITHUB_SECRET_VALUE }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD_GITHUB_SECRET_VALUE }}

    steps:
      #This action checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v2

      #This step performs:
      # 1. add new dependencies in cache
      # 2. retrieve existing data from cache
      - name: logger
        run: |
          echo "branches has been mertged"
          echo 'the following is targer branch: '$GITHUB_EVENT_PULL_REQUEST_BASE_REF
          echo "THIS iS QA"

      - name: Checking Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven- 

      #This step runs munit tests env
      #- name: Build with Maven
        #run:  mvn clean test "-DskipMunitBoolean=false" -s .maven/settings.xml